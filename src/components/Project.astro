---
interface Props {
	from: "left" | "right";
	repo: string;
	// repo:  extends `${infer Owner}/${infer Repo}`;
}
const { from, repo } = Astro.props;
const [owner, name] = repo.split("/");
const QUERY = `query {
  repository(owner: "${owner}", name: "${name}") {
    description
    url
    homepageUrl
    languages(first: 5) {
      nodes {
        name
      }
    }
    
  }
}`;
const res = await fetch("https://api.github.com/graphql", {
	method: "POST",
	headers: {
		"Content-Type": "application/json",
		Accept: "application/json",
		Authorization: `Bearer ${import.meta.env.GITHUB_TOKEN}`,
	},
	body: JSON.stringify({ query: QUERY }),
});
const json = await res.json();
const data: {
	repository: {
		description: string;
		url: string;
		homepageUrl: string;
		languages: {
			nodes: {
				name: string;
			}[];
		};
	};
} = json.data;
---

<div
	class:list={[
		"h-[50vh]",
		{ "ml-auto": from === "left" },
		{ "mr-auto": from === "right" },
	]}
	id={`card-fly-${from}`}
>
	<div class="card w-96 bg-base-100 shadow-xl">
		<figure>
			<img
				src="https://daisyui.com/images/stock/photo-1606107557195-0e29a4b5b4aa.jpg"
				alt="Shoes"
			/>
		</figure>
		<div class="card-body">
			<h2 class="card-title">{repo}</h2>
			<p>{data.repository.description}</p>
			<div class="card-actions">
				<a
					href={data.repository.url}
					class="inline-block text-5xl i-mdi-github"></a>
				<a
					href={data.repository.homepageUrl}
					class="inline-block text-5xl i-mdi-home"></a>
				<!-- We  -->
			</div>
		</div>
	</div>
</div>
